{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","styles","TaskList","map","contact","TaskList_item","key","id","name","number","TaskList_button","type","onClick","Filter","value","onChangeFilter","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","TaskEditor_button","Component","App","filter","addContact","task","cont","includes","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.730fb3a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__1UH3k\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__NrSgx\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__2W5m1\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__vRbmZ\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__3vPq5\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.TaskList}>\r\n    {contacts.map((contact) => (\r\n      <li className = {styles.TaskList_item}key={contact.id}>\r\n        {contact.name + \":\" + contact.number}\r\n        {\r\n          <button\r\n            className={styles.TaskList_button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n  })),\r\n}\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.TaskEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.TaskEditor_label}>\r\n          Number\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.TaskEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__2TI-K\",\"TaskList_item\":\"ContactList_TaskList_item__1IrX7\",\"completed\":\"ContactList_completed__3bifW\",\"TaskList_text\":\"ContactList_TaskList_text__2H0gB\",\"TaskList_actions\":\"ContactList_TaskList_actions__3KKET\",\"TaskList_button\":\"ContactList_TaskList_button__3sFFj\"};"],"sourceRoot":""}